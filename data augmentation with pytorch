{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5fde9d88",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "papermill": {
     "duration": 0.010216,
     "end_time": "2024-06-28T15:37:41.407563",
     "exception": false,
     "start_time": "2024-06-28T15:37:41.397347",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<h2>Table of Contents</h2>\n",
    "\n",
    "In this lab, we train a Convolutional Neural Network with Regular data and Augmented data. The purpose of this lab is to show that the Augmented data improves generalization performance.\n",
    "\n",
    "Think of a scenario where a drone has to take a picture of an object. The drone is moving and the object can also possibly be moving. When an image is taken we arent always going to get perfect images. The subject may not be perfectly centered in the image or the subject may be rotated in the image. In this case, a model trained on perfectly centered or rotated images won't perform well. This is why we train a model on rotated data so it can perform well on imperfect images.\n",
    "\n",
    "In this assignment, we will use a dataset of digit images. We will have two models one trained on non rotated digits and one trained on rotated images and then we will test the models on a rotated testing dataset which will be more realistic and robust in terms of our scenario above.\n",
    "\n",
    "<ul>\n",
    "<li><a href=\"#Makeup_Data\">Get Some Data</a></li>\n",
    "<li><a href=\"#CNN\">Convolutional Neural Network</a></li>\n",
    "<li><a href=\"#R_training_data\">Rotated Training Data</a></li>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9b5ce67b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:37:41.428669Z",
     "iopub.status.busy": "2024-06-28T15:37:41.428308Z",
     "iopub.status.idle": "2024-06-28T15:37:55.027703Z",
     "shell.execute_reply": "2024-06-28T15:37:55.026777Z"
    },
    "papermill": {
     "duration": 13.612613,
     "end_time": "2024-06-28T15:37:55.030070",
     "exception": false,
     "start_time": "2024-06-28T15:37:41.417457",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: torch in /opt/conda/lib/python3.10/site-packages (2.1.2)\r\n",
      "Requirement already satisfied: torchvision in /opt/conda/lib/python3.10/site-packages (0.16.2)\r\n",
      "Requirement already satisfied: torchaudio in /opt/conda/lib/python3.10/site-packages (2.1.2)\r\n",
      "Requirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from torch) (3.13.1)\r\n",
      "Requirement already satisfied: typing-extensions in /opt/conda/lib/python3.10/site-packages (from torch) (4.9.0)\r\n",
      "Requirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch) (1.12.1)\r\n",
      "Requirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch) (3.2.1)\r\n",
      "Requirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch) (3.1.2)\r\n",
      "Requirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from torch) (2024.3.1)\r\n",
      "Requirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from torchvision) (1.26.4)\r\n",
      "Requirement already satisfied: requests in /opt/conda/lib/python3.10/site-packages (from torchvision) (2.32.3)\r\n",
      "Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /opt/conda/lib/python3.10/site-packages (from torchvision) (9.5.0)\r\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch) (2.1.3)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests->torchvision) (3.3.2)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests->torchvision) (3.6)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests->torchvision) (1.26.18)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests->torchvision) (2024.2.2)\r\n",
      "Requirement already satisfied: mpmath<1.4.0,>=1.1.0 in /opt/conda/lib/python3.10/site-packages (from sympy->torch) (1.3.0)\r\n"
     ]
    }
   ],
   "source": [
    "!pip3 install torch torchvision torchaudio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a390bffb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:37:55.051203Z",
     "iopub.status.busy": "2024-06-28T15:37:55.050913Z",
     "iopub.status.idle": "2024-06-28T15:37:56.297647Z",
     "shell.execute_reply": "2024-06-28T15:37:56.296641Z"
    },
    "papermill": {
     "duration": 1.259591,
     "end_time": "2024-06-28T15:37:56.299718",
     "exception": false,
     "start_time": "2024-06-28T15:37:55.040127",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--2024-06-28 15:37:55--  https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/meet_up/12.02.2020/normal.pt\r\n",
      "Resolving s3-api.us-geo.objectstorage.softlayer.net (s3-api.us-geo.objectstorage.softlayer.net)... 67.228.254.196\r\n",
      "Connecting to s3-api.us-geo.objectstorage.softlayer.net (s3-api.us-geo.objectstorage.softlayer.net)|67.228.254.196|:443... connected.\r\n",
      "HTTP request sent, awaiting response... 200 OK\r\n",
      "Length: 75134 (73K) [application/octet-stream]\r\n",
      "Saving to: 'normal.pt'\r\n",
      "\r\n",
      "normal.pt           100%[===================>]  73.37K  --.-KB/s    in 0.04s   \r\n",
      "\r\n",
      "2024-06-28 15:37:56 (1.75 MB/s) - 'normal.pt' saved [75134/75134]\r\n",
      "\r\n"
     ]
    }
   ],
   "source": [
    "# Download a Pretrained Model because training takes a long time\n",
    "!wget https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/meet_up/12.02.2020/normal.pt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a9a5ae29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:37:56.322484Z",
     "iopub.status.busy": "2024-06-28T15:37:56.321603Z",
     "iopub.status.idle": "2024-06-28T15:37:57.517201Z",
     "shell.execute_reply": "2024-06-28T15:37:57.516349Z"
    },
    "papermill": {
     "duration": 1.209016,
     "end_time": "2024-06-28T15:37:57.519107",
     "exception": false,
     "start_time": "2024-06-28T15:37:56.310091",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--2024-06-28 15:37:57--  https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/meet_up/12.02.2020/rotated_data.pt\r\n",
      "Resolving s3-api.us-geo.objectstorage.softlayer.net (s3-api.us-geo.objectstorage.softlayer.net)... 67.228.254.196\r\n",
      "Connecting to s3-api.us-geo.objectstorage.softlayer.net (s3-api.us-geo.objectstorage.softlayer.net)|67.228.254.196|:443... connected.\r\n",
      "HTTP request sent, awaiting response... 200 OK\r\n",
      "Length: 75134 (73K) [application/octet-stream]\r\n",
      "Saving to: 'rotated_data.pt'\r\n",
      "\r\n",
      "rotated_data.pt     100%[===================>]  73.37K  --.-KB/s    in 0.04s   \r\n",
      "\r\n",
      "2024-06-28 15:37:57 (1.75 MB/s) - 'rotated_data.pt' saved [75134/75134]\r\n",
      "\r\n"
     ]
    }
   ],
   "source": [
    "# Download a Pretrained Model Trained on Augmented Data because training takes a long time\n",
    "!wget https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/meet_up/12.02.2020/rotated_data.pt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f2573d97",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:37:57.541526Z",
     "iopub.status.busy": "2024-06-28T15:37:57.540940Z",
     "iopub.status.idle": "2024-06-28T15:38:09.911021Z",
     "shell.execute_reply": "2024-06-28T15:38:09.910081Z"
    },
    "papermill": {
     "duration": 12.38394,
     "end_time": "2024-06-28T15:38:09.913603",
     "exception": false,
     "start_time": "2024-06-28T15:37:57.529663",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: Pillow in /opt/conda/lib/python3.10/site-packages (9.5.0)\r\n"
     ]
    }
   ],
   "source": [
    "# Library to Show Images\n",
    "!pip install Pillow"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25c62385",
   "metadata": {
    "papermill": {
     "duration": 0.010196,
     "end_time": "2024-06-28T15:38:09.934638",
     "exception": false,
     "start_time": "2024-06-28T15:38:09.924442",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "***Restart the kernel***\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "49597cb0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:09.957695Z",
     "iopub.status.busy": "2024-06-28T15:38:09.957389Z",
     "iopub.status.idle": "2024-06-28T15:38:15.183278Z",
     "shell.execute_reply": "2024-06-28T15:38:15.182427Z"
    },
    "papermill": {
     "duration": 5.239717,
     "end_time": "2024-06-28T15:38:15.185677",
     "exception": false,
     "start_time": "2024-06-28T15:38:09.945960",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import torchvision.transforms as transforms\n",
    "import torchvision.datasets as dsets\n",
    "import matplotlib.pylab as plt\n",
    "import numpy as np\n",
    "import os"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d69dca1c",
   "metadata": {
    "papermill": {
     "duration": 0.010457,
     "end_time": "2024-06-28T15:38:15.207448",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.196991",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Plot Cost and Accuracy vs Epoch Graph\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2e57aed5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:15.230394Z",
     "iopub.status.busy": "2024-06-28T15:38:15.228967Z",
     "iopub.status.idle": "2024-06-28T15:38:15.236527Z",
     "shell.execute_reply": "2024-06-28T15:38:15.235738Z"
    },
    "papermill": {
     "duration": 0.020542,
     "end_time": "2024-06-28T15:38:15.238308",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.217766",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def plot_cost_accuracy(checkpoint):\n",
    "    fig, ax1 = plt.subplots()\n",
    "    color='tab:red'\n",
    "    ax1.plot(checkpoint['cost'],color=color)\n",
    "    ax1.set_xlabel('epoch',color=color)\n",
    "    ax1.set_ylabel('cost',color=color)\n",
    "    ax1.tick_params(axis='y',color=color)\n",
    "    \n",
    "    ax2=ax1.twinx()\n",
    "    color='tab:blue'\n",
    "    ax2.plot(checkpoint['accuracy'],color=color)\n",
    "    ax2.set_xlabel('epoch',color=color)\n",
    "    ax1.set_ylabel('accuracy',color=color)\n",
    "    ax1.tick_params(axis='y',color=color)\n",
    "    fig.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f18f8d30",
   "metadata": {
    "papermill": {
     "duration": 0.01024,
     "end_time": "2024-06-28T15:38:15.258924",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.248684",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Define the function <code>show_data</code> to plot out data samples as images.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "36f41ca1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:15.280829Z",
     "iopub.status.busy": "2024-06-28T15:38:15.280555Z",
     "iopub.status.idle": "2024-06-28T15:38:15.285219Z",
     "shell.execute_reply": "2024-06-28T15:38:15.284224Z"
    },
    "papermill": {
     "duration": 0.018047,
     "end_time": "2024-06-28T15:38:15.287378",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.269331",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def show_data(data_sample):\n",
    "    plt.imshow(data_sample[0].numpy().reshape(IMAGE_SIZE,IMAGE_SIZE),cmap='gray')\n",
    "    plt.title('y='+str(data_sample[1]))\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96093c2a",
   "metadata": {
    "papermill": {
     "duration": 0.010204,
     "end_time": "2024-06-28T15:38:15.308075",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.297871",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Plot first 5 misclassified samples \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6a37e828",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:15.329924Z",
     "iopub.status.busy": "2024-06-28T15:38:15.329640Z",
     "iopub.status.idle": "2024-06-28T15:38:15.335739Z",
     "shell.execute_reply": "2024-06-28T15:38:15.334884Z"
    },
    "papermill": {
     "duration": 0.019281,
     "end_time": "2024-06-28T15:38:15.337698",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.318417",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def plot_mis_classified(model,dataset):\n",
    "    count=0\n",
    "    for x,y in torch.utils.data.DataLoader(dataset=dataset,batch_size=1):\n",
    "        z = model(x)\n",
    "        _,yhat = torch.max(z,1)\n",
    "        if yhat != y:\n",
    "            show_data((x,y))\n",
    "            plt.show()\n",
    "            count +=1\n",
    "        if count >= 5:\n",
    "            break"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76deda65",
   "metadata": {
    "papermill": {
     "duration": 0.010195,
     "end_time": "2024-06-28T15:38:15.358352",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.348157",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<h2 id=\"Makeup_Data\">Load Data</h2> \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef386a30",
   "metadata": {
    "papermill": {
     "duration": 0.01021,
     "end_time": "2024-06-28T15:38:15.378882",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.368672",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We create a transform object  <code>compose</code> one will resize the image and convert it to a tensor, the second will also rotate the image Randomly rotate the image.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3de6b593",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:15.400710Z",
     "iopub.status.busy": "2024-06-28T15:38:15.400447Z",
     "iopub.status.idle": "2024-06-28T15:38:15.405443Z",
     "shell.execute_reply": "2024-06-28T15:38:15.404697Z"
    },
    "papermill": {
     "duration": 0.018006,
     "end_time": "2024-06-28T15:38:15.407318",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.389312",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "IMAGE_SIZE=16\n",
    "\n",
    "compose_rotate = transforms.Compose([transforms.Resize((IMAGE_SIZE,IMAGE_SIZE)),transforms.RandomAffine(45),transforms.ToTensor()])\n",
    "\n",
    "compose = transforms.Compose([transforms.Resize((IMAGE_SIZE,IMAGE_SIZE)),transforms.ToTensor()])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "38c1c8cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:15.428738Z",
     "iopub.status.busy": "2024-06-28T15:38:15.428471Z",
     "iopub.status.idle": "2024-06-28T15:38:19.458621Z",
     "shell.execute_reply": "2024-06-28T15:38:19.457696Z"
    },
    "papermill": {
     "duration": 4.04351,
     "end_time": "2024-06-28T15:38:19.461057",
     "exception": false,
     "start_time": "2024-06-28T15:38:15.417547",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz\n",
      "Failed to download (trying next):\n",
      "HTTP Error 403: Forbidden\n",
      "\n",
      "Downloading https://ossci-datasets.s3.amazonaws.com/mnist/train-images-idx3-ubyte.gz\n",
      "Downloading https://ossci-datasets.s3.amazonaws.com/mnist/train-images-idx3-ubyte.gz to /kaggle/working/MNIST/raw/train-images-idx3-ubyte.gz\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 9912422/9912422 [00:00<00:00, 15919924.72it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extracting /kaggle/working/MNIST/raw/train-images-idx3-ubyte.gz to /kaggle/working/MNIST/raw\n",
      "\n",
      "Downloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz\n",
      "Failed to download (trying next):\n",
      "HTTP Error 403: Forbidden\n",
      "\n",
      "Downloading https://ossci-datasets.s3.amazonaws.com/mnist/train-labels-idx1-ubyte.gz\n",
      "Downloading https://ossci-datasets.s3.amazonaws.com/mnist/train-labels-idx1-ubyte.gz to /kaggle/working/MNIST/raw/train-labels-idx1-ubyte.gz\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 28881/28881 [00:00<00:00, 470230.83it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extracting /kaggle/working/MNIST/raw/train-labels-idx1-ubyte.gz to /kaggle/working/MNIST/raw\n",
      "\n",
      "Downloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz\n",
      "Failed to download (trying next):\n",
      "HTTP Error 403: Forbidden\n",
      "\n",
      "Downloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-images-idx3-ubyte.gz\n",
      "Downloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-images-idx3-ubyte.gz to /kaggle/working/MNIST/raw/t10k-images-idx3-ubyte.gz\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 1648877/1648877 [00:00<00:00, 4444903.09it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extracting /kaggle/working/MNIST/raw/t10k-images-idx3-ubyte.gz to /kaggle/working/MNIST/raw\n",
      "\n",
      "Downloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz\n",
      "Failed to download (trying next):\n",
      "HTTP Error 403: Forbidden\n",
      "\n",
      "Downloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-labels-idx1-ubyte.gz\n",
      "Downloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-labels-idx1-ubyte.gz to /kaggle/working/MNIST/raw/t10k-labels-idx1-ubyte.gz\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 4542/4542 [00:00<00:00, 3044188.04it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extracting /kaggle/working/MNIST/raw/t10k-labels-idx1-ubyte.gz to /kaggle/working/MNIST/raw\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "train_dataset_rotate = dsets.MNIST(root='/kaggle/working/',train=True,download=True,transform=compose_rotate)\n",
    "train_dataset=dsets.MNIST(root='/kaggle/working/',train=True,download=True,transform=compose)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1050a75f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:19.489882Z",
     "iopub.status.busy": "2024-06-28T15:38:19.489571Z",
     "iopub.status.idle": "2024-06-28T15:38:19.503050Z",
     "shell.execute_reply": "2024-06-28T15:38:19.502347Z"
    },
    "papermill": {
     "duration": 0.029385,
     "end_time": "2024-06-28T15:38:19.505157",
     "exception": false,
     "start_time": "2024-06-28T15:38:19.475772",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "validation_dataset = dsets.MNIST(root='/kaggle/working/',train=False,download=True,transform=compose_rotate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "74e580c4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:19.531839Z",
     "iopub.status.busy": "2024-06-28T15:38:19.531565Z",
     "iopub.status.idle": "2024-06-28T15:38:19.883919Z",
     "shell.execute_reply": "2024-06-28T15:38:19.882933Z"
    },
    "papermill": {
     "duration": 0.368038,
     "end_time": "2024-06-28T15:38:19.886107",
     "exception": false,
     "start_time": "2024-06-28T15:38:19.518069",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "show_data(train_dataset[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "50621678",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:19.914565Z",
     "iopub.status.busy": "2024-06-28T15:38:19.914207Z",
     "iopub.status.idle": "2024-06-28T15:38:19.920735Z",
     "shell.execute_reply": "2024-06-28T15:38:19.919973Z"
    },
    "papermill": {
     "duration": 0.022801,
     "end_time": "2024-06-28T15:38:19.922628",
     "exception": false,
     "start_time": "2024-06-28T15:38:19.899827",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_dataset[0][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "577db8b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:19.952438Z",
     "iopub.status.busy": "2024-06-28T15:38:19.952191Z",
     "iopub.status.idle": "2024-06-28T15:38:20.262214Z",
     "shell.execute_reply": "2024-06-28T15:38:20.261372Z"
    },
    "papermill": {
     "duration": 0.327372,
     "end_time": "2024-06-28T15:38:20.264427",
     "exception": false,
     "start_time": "2024-06-28T15:38:19.937055",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "show_data(train_dataset_rotate[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6997121",
   "metadata": {
    "papermill": {
     "duration": 0.013552,
     "end_time": "2024-06-28T15:38:20.291721",
     "exception": false,
     "start_time": "2024-06-28T15:38:20.278169",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<h2 id=\"CNN\">Build a Convolutional Neural Network Class</h2>\n",
    "Build a Convolutional Network class with two Convolutional layers and one fully connected layer. Pre-determine the size of the final output matrix. The parameters in the constructor are the number of output channels for the first and second layers.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "5abd7246",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:20.320027Z",
     "iopub.status.busy": "2024-06-28T15:38:20.319531Z",
     "iopub.status.idle": "2024-06-28T15:38:20.329508Z",
     "shell.execute_reply": "2024-06-28T15:38:20.328843Z"
    },
    "papermill": {
     "duration": 0.025956,
     "end_time": "2024-06-28T15:38:20.331330",
     "exception": false,
     "start_time": "2024-06-28T15:38:20.305374",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class CNN(nn.Module):\n",
    "    #constructor\n",
    "    def __init__(self,out_1=16,out_2=32):\n",
    "        super(CNN,self).__init__()\n",
    "        # The reason we start with 1 channel is because we have a single black and white image\n",
    "        # Channel Width after this layer is 16\n",
    "        self.cnn1 = nn.Conv2d(in_channels=1,out_channels=out_1,kernel_size=5,padding=2)\n",
    "        # Channel Width after this layer is 8\n",
    "        self.maxpool1 = nn.MaxPool2d(kernel_size=2)\n",
    "        \n",
    "        self.cnn2 = nn.Conv2d(in_channels=out_1,out_channels=out_2,kernel_size=5,stride=1,padding=2)\n",
    "        # Channel Width after this layer is 4\n",
    "        self.maxpool2 = nn.MaxPool2d(kernel_size=2)\n",
    "        \n",
    "        # In total we have out_2 (32) channels which are each 4 * 4 in size based on the width calculation above. Channels are squares.\n",
    "        # The output is a value for each class\n",
    "        self.fc1 = nn.Linear(out_2*4*4,10)\n",
    "    #prediction\n",
    "    def forward(self,x):\n",
    "        x = self.cnn1(x)\n",
    "        x = torch.relu(x)\n",
    "        x=self.maxpool1(x)\n",
    "        x=self.cnn2(x)\n",
    "        x=torch.relu(x)\n",
    "        x=self.maxpool2(x)\n",
    "        x=x.view(x.size(0),-1)\n",
    "        x=self.fc1(x)\n",
    "        return x\n",
    "    def activations(self,x):\n",
    "        z1 = self.cnn1(x)\n",
    "        a1 = torch.relu(z1)\n",
    "        out=self.maxpool1(a2)\n",
    "        z2=self.cnn2(out)\n",
    "        a2=torch.relu(z2)\n",
    "        out1=self.maxpool2(z2)\n",
    "        return z1,a1,z2,a2,out1,out"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10a793cb",
   "metadata": {
    "papermill": {
     "duration": 0.013131,
     "end_time": "2024-06-28T15:38:20.357950",
     "exception": false,
     "start_time": "2024-06-28T15:38:20.344819",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<h2 id=\"regular_data\">Regular Data</h2> \n",
    "Define the Convolutional Neural Network Classifier, Criterion function, Optimizer, and Train the Model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "64a2f890",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:20.385613Z",
     "iopub.status.busy": "2024-06-28T15:38:20.385343Z",
     "iopub.status.idle": "2024-06-28T15:38:20.390352Z",
     "shell.execute_reply": "2024-06-28T15:38:20.389667Z"
    },
    "papermill": {
     "duration": 0.020973,
     "end_time": "2024-06-28T15:38:20.392170",
     "exception": false,
     "start_time": "2024-06-28T15:38:20.371197",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Create the model object to be trained on regular data using CNN class\n",
    "model = CNN(out_1=16,out_2=32)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fedafc5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:20.420464Z",
     "iopub.status.busy": "2024-06-28T15:38:20.420199Z",
     "iopub.status.idle": "2024-06-28T15:38:20.425703Z",
     "shell.execute_reply": "2024-06-28T15:38:20.424808Z"
    },
    "papermill": {
     "duration": 0.022014,
     "end_time": "2024-06-28T15:38:20.427749",
     "exception": false,
     "start_time": "2024-06-28T15:38:20.405735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "criterion = nn.CrossEntropyLoss()\n",
    "learning_rate = 0.1\n",
    "optimizer = torch.optim.SGD(model.parameters(),lr=learning_rate)\n",
    "train_loader = torch.utils.data.DataLoader(dataset=train_dataset,batch_size=100)\n",
    "validation_loader = torch.utils.data.DataLoader(dataset=validation_dataset,batch_size=5000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "fc0f52da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:38:20.455765Z",
     "iopub.status.busy": "2024-06-28T15:38:20.455502Z",
     "iopub.status.idle": "2024-06-28T15:39:45.299142Z",
     "shell.execute_reply": "2024-06-28T15:39:45.297849Z"
    },
    "papermill": {
     "duration": 84.860256,
     "end_time": "2024-06-28T15:39:45.301292",
     "exception": false,
     "start_time": "2024-06-28T15:38:20.441036",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 20%|██        | 1/5 [00:17<01:09, 17.32s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7493\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 40%|████      | 2/5 [00:33<00:50, 16.93s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7826\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 60%|██████    | 3/5 [00:50<00:33, 16.96s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7896\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 80%|████████  | 4/5 [01:07<00:16, 16.93s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7979\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 5/5 [01:24<00:00, 16.97s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8031\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "from tqdm import tqdm\n",
    "#location to save data\n",
    "file_normal = os.path.join(os.getcwd(),'normal.pt')\n",
    "# All the data we are saving\n",
    "checkpoint = {\n",
    "    'epoch':None,\n",
    "    'model_state_dict':None,\n",
    "    'optimizer_state_dict':None,\n",
    "    'loss':None,\n",
    "    'cost':[],\n",
    "    'accuracy':[]\n",
    "}\n",
    "\n",
    "n_epochs=5\n",
    "# Size of the testing dataset\n",
    "N_test = len(validation_dataset)\n",
    "# Training for the number of epochs we want\n",
    "for epoch in tqdm(range(n_epochs)):\n",
    "    cost=0\n",
    "    for x,y in train_loader:\n",
    "        # Resets the calculated gradient value, this must be done each time as it accumulates if we do not reset\n",
    "        optimizer.zero_grad()\n",
    "        # Makes a prediction on the image\n",
    "        z=model(x)\n",
    "        # Calculate the loss between the prediction and actual class\n",
    "        loss=criterion(z,y)\n",
    "        # Calculates the gradient value with respect to each weight and bias\n",
    "        loss.backward()\n",
    "        # Updates the weight and bias according to calculated gradient value\n",
    "        optimizer.step()\n",
    "        \n",
    "        # Saves the number of epochs we trained for  \n",
    "        checkpoint['epochs'] = n_epochs\n",
    "        # Saves the models parameters\n",
    "        checkpoint['model_state_dict'] = model.state_dict()\n",
    "        # Saves the optimizers paramters\n",
    "        checkpoint['optimizer_state_dict'] = optimizer.state_dict()\n",
    "        # Saves the loss for the last batch so ultimately this will be the loss for the last batch of the last epoch\n",
    "        checkpoint['loss'] = loss\n",
    "        # Accumulates the loss\n",
    "        cost += loss.item()\n",
    "    # Counter for the correct number of predictions        \n",
    "    correct = 0\n",
    "    # For each batch in the validation dataset\n",
    "    for x_test, y_test in validation_loader:\n",
    "        # Make a prediction\n",
    "        z = model(x_test)\n",
    "        # Get the class that has the maximum value\n",
    "        _, yhat = torch.max(z.data, 1)\n",
    "        # Counts the number of correct predictions made\n",
    "        correct += (yhat == y_test).sum().item()\n",
    " \n",
    "    accuracy = correct / N_test\n",
    "    print(accuracy)\n",
    "    # Appends the cost of the epoch to a list\n",
    "    checkpoint['cost'].append(cost) \n",
    "    # Appends the accuracy of the epoch to a list\n",
    "    checkpoint['accuracy'].append(accuracy)\n",
    "    # Saves the data in checkpoint to the file location\n",
    "    torch.save(checkpoint, file_normal) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad41656a",
   "metadata": {
    "papermill": {
     "duration": 0.014342,
     "end_time": "2024-06-28T15:39:45.330876",
     "exception": false,
     "start_time": "2024-06-28T15:39:45.316534",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<h3 id=\"Result\">Analyze Results</h3> \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f9ec3e18",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:39:45.360796Z",
     "iopub.status.busy": "2024-06-28T15:39:45.360493Z",
     "iopub.status.idle": "2024-06-28T15:39:45.367535Z",
     "shell.execute_reply": "2024-06-28T15:39:45.366841Z"
    },
    "papermill": {
     "duration": 0.024481,
     "end_time": "2024-06-28T15:39:45.369624",
     "exception": false,
     "start_time": "2024-06-28T15:39:45.345143",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "checkpoint_normal = torch.load(os.path.join(os.getcwd(),'normal.pt'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "bfe04bd1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:39:45.399731Z",
     "iopub.status.busy": "2024-06-28T15:39:45.399475Z",
     "iopub.status.idle": "2024-06-28T15:39:45.726132Z",
     "shell.execute_reply": "2024-06-28T15:39:45.725207Z"
    },
    "papermill": {
     "duration": 0.344177,
     "end_time": "2024-06-28T15:39:45.728288",
     "exception": false,
     "start_time": "2024-06-28T15:39:45.384111",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_cost_accuracy(checkpoint_normal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ac0c80bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:39:45.760687Z",
     "iopub.status.busy": "2024-06-28T15:39:45.760353Z",
     "iopub.status.idle": "2024-06-28T15:39:47.134678Z",
     "shell.execute_reply": "2024-06-28T15:39:47.133731Z"
    },
    "papermill": {
     "duration": 1.392742,
     "end_time": "2024-06-28T15:39:47.136635",
     "exception": false,
     "start_time": "2024-06-28T15:39:45.743893",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Using the model parameters we saved we load them into a model to recreate the trained model\n",
    "model.load_state_dict(checkpoint_normal['model_state_dict'])\n",
    "# Setting the model to evaluation mode\n",
    "model.eval()\n",
    "# Using the helper function plot the first five misclassified samples\n",
    "plot_mis_classified(model,validation_dataset)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00ff6047",
   "metadata": {
    "papermill": {
     "duration": 0.016665,
     "end_time": "2024-06-28T15:39:47.170199",
     "exception": false,
     "start_time": "2024-06-28T15:39:47.153534",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<h2 id=\"R_training_data\">Rotated Training Data</h2> \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b6c6e279",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:39:47.204515Z",
     "iopub.status.busy": "2024-06-28T15:39:47.204185Z",
     "iopub.status.idle": "2024-06-28T15:39:47.212450Z",
     "shell.execute_reply": "2024-06-28T15:39:47.211526Z"
    },
    "papermill": {
     "duration": 0.027999,
     "end_time": "2024-06-28T15:39:47.214415",
     "exception": false,
     "start_time": "2024-06-28T15:39:47.186416",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Create the model object using CNN class\n",
    "model_r = CNN(out_1=16, out_2=32)\n",
    "# We create a criterion which will measure loss\n",
    "criterion = nn.CrossEntropyLoss()\n",
    "learning_rate = 0.1\n",
    "# Create an optimizer that updates model parameters using the learning rate and gradient\n",
    "optimizer = torch.optim.SGD(model_r.parameters(), lr = learning_rate)\n",
    "# Create a Data Loader for the rotated training data with a batch size of 100 \n",
    "train_loader = torch.utils.data.DataLoader(dataset=train_dataset_rotate, batch_size=100)\n",
    "# Create a Data Loader for the rotated validation data with a batch size of 5000 \n",
    "validation_loader = torch.utils.data.DataLoader(dataset=validation_dataset, batch_size=5000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "60e43b87",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:39:47.248830Z",
     "iopub.status.busy": "2024-06-28T15:39:47.248533Z",
     "iopub.status.idle": "2024-06-28T15:43:29.015928Z",
     "shell.execute_reply": "2024-06-28T15:43:29.015017Z"
    },
    "papermill": {
     "duration": 221.807317,
     "end_time": "2024-06-28T15:43:29.038404",
     "exception": false,
     "start_time": "2024-06-28T15:39:47.231087",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 10%|█         | 1/10 [00:22<03:22, 22.52s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8944\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 20%|██        | 2/10 [00:44<02:58, 22.36s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.934\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 30%|███       | 3/10 [01:06<02:35, 22.24s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.941\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 40%|████      | 4/10 [01:29<02:13, 22.21s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9454\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 50%|█████     | 5/10 [01:50<01:50, 22.05s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9531\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 60%|██████    | 6/10 [02:13<01:28, 22.14s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9586\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 70%|███████   | 7/10 [02:35<01:06, 22.16s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9628\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 80%|████████  | 8/10 [02:57<00:44, 22.08s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.964\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 90%|█████████ | 9/10 [03:19<00:22, 22.17s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.965\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 10/10 [03:41<00:00, 22.18s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9625\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# Location to save data\n",
    "file_rotated = os.path.join(os.getcwd(), 'rotated_data.pt')\n",
    "\n",
    "# All the data we are saving\n",
    "checkpoint={\n",
    "            # Saving the number of epochs the models was trained for\n",
    "            'epoch': None,\n",
    "            # Saving the models parameters which will allow us to recreate the trained model\n",
    "            'model_state_dict': None,\n",
    "            # Saving the optimizers parameters\n",
    "            'optimizer_state_dict': None,\n",
    "            # Saving the loss on the training dataset for the last batch of the last epoch\n",
    "            'loss': None,\n",
    "            # Saving the cost on the training dataset for each epoch\n",
    "            'cost': [],\n",
    "            # Saving the accuracy for the testing dataset for each epoch\n",
    "            'accuracy': []}\n",
    "            \n",
    "# Number of epochs to train model            \n",
    "n_epochs = 10\n",
    "\n",
    "# Size of the testing dataset\n",
    "N_test = len(validation_dataset)\n",
    "\n",
    "# Training for the number of epochs we want\n",
    "for epoch in tqdm(range(n_epochs)):\n",
    "    # Variable to keep track of cost for each epoch\n",
    "    cost = 0\n",
    "    # For each batch in the training dataset\n",
    "    for x, y in train_loader:\n",
    "        # Resets the calculated gradient value, this must be done each time as it accumulates if we do not reset\n",
    "        optimizer.zero_grad()\n",
    "        # Makes a prediction on the image\n",
    "        z = model_r(x)\n",
    "        # Calculate the loss between the prediction and actual class\n",
    "        loss = criterion(z, y)\n",
    "        # Calculates the gradient value with respect to each weight and bias\n",
    "        loss.backward()\n",
    "        # Updates the weight and bias according to calculated gradient value\n",
    "        optimizer.step()\n",
    "      \n",
    "        # Saves the number of epochs we trained for  \n",
    "        checkpoint['epochs'] = n_epochs\n",
    "        # Saves the models parameters\n",
    "        checkpoint['model_state_dict'] = model.state_dict()\n",
    "        # Saves the optimizers paramters\n",
    "        checkpoint['optimizer_state_dict'] = optimizer.state_dict()\n",
    "        # Saves the loss for the last batch so ultimately this will be the loss for the last batch of the last epoch\n",
    "        checkpoint['loss'] = loss\n",
    "        # Accumulates the loss\n",
    "        cost+=loss.item()\n",
    "        \n",
    "     \n",
    "    # Counter for the correct number of predictions        \n",
    "    correct = 0\n",
    "        \n",
    "    # For each batch in the validation dataset\n",
    "    for x_test, y_test in validation_loader:\n",
    "        # Make a prediction\n",
    "        z = model_r(x_test)\n",
    "        # Get the class that has the maximum value\n",
    "        _, yhat = torch.max(z.data, 1)\n",
    "        # Counts the number of correct predictions made\n",
    "        correct += (yhat == y_test).sum().item()\n",
    " \n",
    "    accuracy = correct / N_test\n",
    "    print(accuracy)\n",
    "    # Appends the cost of the epoch to a list\n",
    "    checkpoint['cost'].append(cost) \n",
    "    # Appends the accuracy of the epoch to a list\n",
    "    checkpoint['accuracy'].append(accuracy)\n",
    "    # Saves the data in checkpoint to the file location\n",
    "    torch.save(checkpoint, file_rotated) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8d75dab3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:43:29.075739Z",
     "iopub.status.busy": "2024-06-28T15:43:29.075426Z",
     "iopub.status.idle": "2024-06-28T15:43:29.081075Z",
     "shell.execute_reply": "2024-06-28T15:43:29.080404Z"
    },
    "papermill": {
     "duration": 0.02663,
     "end_time": "2024-06-28T15:43:29.083155",
     "exception": false,
     "start_time": "2024-06-28T15:43:29.056525",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "checkpoint_rotated= torch.load(os.path.join(os.getcwd(),'rotated_data.pt'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f4794737",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:43:29.121302Z",
     "iopub.status.busy": "2024-06-28T15:43:29.121001Z",
     "iopub.status.idle": "2024-06-28T15:43:29.444485Z",
     "shell.execute_reply": "2024-06-28T15:43:29.443611Z"
    },
    "papermill": {
     "duration": 0.34433,
     "end_time": "2024-06-28T15:43:29.446578",
     "exception": false,
     "start_time": "2024-06-28T15:43:29.102248",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_cost_accuracy(checkpoint_rotated)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7d95b72e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-28T15:43:29.486084Z",
     "iopub.status.busy": "2024-06-28T15:43:29.485786Z",
     "iopub.status.idle": "2024-06-28T15:43:30.845565Z",
     "shell.execute_reply": "2024-06-28T15:43:30.844659Z"
    },
    "papermill": {
     "duration": 1.381812,
     "end_time": "2024-06-28T15:43:30.847744",
     "exception": false,
     "start_time": "2024-06-28T15:43:29.465932",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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5Cf+46tWrdKkSZNaVevcUDjf/9R79+6tHTt2aMSIEUH933xycrIeeeQRPfLII6qrq9MNN9yg+fPnKzc313/RwK5du/wv9Z21a9euVl9UkJGRoTfeeOOi+vu///s/bdiwQQ888ICcTmebH3/w4EGdOnVKffr0uaj1cWUigBDSunbtqtzcXL366qs6efKk/uVf/iXgf9kX+x5QbGxss2dOY8eO1dtvv62XXnqpyaf+T5w4ocbGRsXGxrZ6nYaGBh0/flwul8s/1r17d7ndbv9l3VlZWerevbuWLl2qyZMn+wPgnXfe0RdffKHZs2e3aq2hQ4fqv/7rv7Rv3z7/y3ut9frrr6uxsfGiX37bvn27JAW8Pwa0hABCyJs4caLGjBkjSZo3b17AsYt9D2jgwIFatWqVCgsLNWjQIHXq1EmjR4/WhAkTtHr1aj300EPasGGDhg8froaGBn355ZdavXq13nvvPWVlZbV6nWPHjqlnz54aM2aMMjMz1alTJ73//vuqqKjQr371K0lShw4dVFJSokmTJunmm2/W/fff778MOy0tTY899lir1ho1apSioqL0/vvvN3vLnAspLS2V2+1WdnZ2mx53Vnl5uVJTU7kEG21j9iI8oGU+n8/q0qWL5XK5Ai5TvhTHjx+3/vVf/9Xq3LmzJSngkuxTp05ZJSUlVt++fS2n02l16dLFGjhwoDV37lzL4/H450lq9vLqXr16WXl5ef7ep0+fbmVmZlpxcXFWbGyslZmZaf36179u8rhVq1ZZAwYMsJxOp5WQkGCNGzfO+vrrrwPm5OXlWbGxsef9ue68805rxIgRAWMtXYb95ZdfWpKswsLC8845q7nLsBsaGqzk5GTrZz/7WYuPB85FACHknT592urWrZs1efJk062EvI0bN1oRERHW7t27/WNnA+jIkSPWN998c1F1fT6fdeTIEWvRokVNAqisrMyKiYmxDh06dMn948rCrXgQ8tasWaMjR45o4sSJplsJeT/4wQ902223acGCBU2OdevW7aLvkvD222+rW7duevTRR5scKykp0ZQpU4J6OTyuDA7LuoQPDgA22rp1q/7yl79o3rx56tq1a5N7p6F19u3b5/9gbFRU1EW9z3PkyBHt2LHDvz9kyBDFxcUFq0VcoQgghKwHHnhAr776qq6//nqtWLFC/fr1M90SgCAigAAARvAeEADA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/v3768CBAyouLlZeXl6T+U6nU06nM9htAABCXNDPgL777jtFRASWjYyMVGNjY7CXAgCEsaCfAY0ePVrz589Xamqq+vbtq88++0zPPvusJk+eHOylAABhLOgBtGjRIs2aNUuPPPKI6urq5Ha79R//8R+aPXt2sJcCAISxoAdQXFycFi5cqIULFwa7NACgHeFecAAAIwggAIARBBAAwAgCCABgRNAvQgAup7i4ONtqx8fH21bbzo8lNPeB72CJirLvT8bq1attq71y5UrbaktSdXW1rfXbK86AAABGEEAAACMIIACAEQQQAMAIAggAYAQBBAAwggACABhBAAEAjCCAAABGEEAAACMIIACAEQQQAMAIAggAYAQBBAAwggACABhBAAEAjCCAAABGEEAAACMIIACAEQQQAMAIAggAYAQBBAAwIsp0AzDvqquusrX+rbfealvta6+91rba2dnZttX2+Xy21V68eLFttdetW2db7T179thW27Is22rj4nEGBAAwggACABhBAAEAjCCAAABGEEAAACMIIACAEQQQAMCINgfQxo0bNXr0aLndbjkcDq1ZsybguGVZmj17tpKTkxUTE6OcnBxbr+8HAISnNgdQfX29MjMzz/thtwULFuiFF17Q0qVLtXXrVsXGxmrkyJE6efLkJTcLAGg/2nwnhNzcXOXm5jZ7zLIsLVy4UD/72c901113SZJ+97vfqUePHlqzZo3uu+++S+sWANBuBPU9oP3796u2tlY5OTn+MZfLpSFDhmjz5s3NPsbn88nr9QZsAID2L6gBVFtbK0nq0aNHwHiPHj38x/5RcXGxXC6Xf0tJSQlmSwCAEGX8KriioiJ5PB7/VlNTY7olAMBlENQASkpKkiQdPnw4YPzw4cP+Y//I6XQqPj4+YAMAtH9BDaD09HQlJSVp/fr1/jGv16utW7dq6NChwVwKABDm2nwV3PHjx7V3717//v79+1VdXa2EhASlpqaqoKBAP//5z3X11VcrPT1ds2bNktvt1t133x3MvgEAYa7NAVRZWalbbrnFv19YWChJysvL04oVK/TEE0+ovr5eDz74oI4ePaqbbrpJ7777rjp27Bi8rgEAYa/NAZSdnX3Bbxd0OBx66qmn9NRTT11SYwCA9s34VXAAgCsTAQQAMIIAAgAYQQABAIxo80UIOL+0tDTbaj/++OO21R42bJht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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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X5988omeffZZ5ebmau3atcrIyKhV71dzOp2KiKi8fig+Pj4g+GqjVatWKiws1IEDB1RSUqL27dsrMTFRbrdbd955Z51qnT592v8+G1AbBBBC2ogRI5Sdna033nhD58+fV4MGDQI+y7JmzRqNHTu2VrWuDoXq/lJv166d9uzZowEDBgT1r/mkpCRNnDhREydOVGlpqbp166YFCxYoIyPDv2hg3759/pf6rti3b1+tFxV06NBB77zzznX11759e7Vv316S9Ne//lV///vf9fjjj9f6/KNHj+rixYvq2LHjdV0ftyYCCCGtefPmysjI0B/+8AdduHBBP/7xjwP+yr7e94BiYmKqnDkNHz5cf/rTn/TKK69U+tT/+fPnVVFRoZiYmFpfp7y8XGfPnpXL5fKPJSQkyO12+1eh9ejRQwkJCVq+fLnGjRsnp9MpSfrwww+1d+9ezZkzp1bX6tOnj/77v/9bhw4d8r+8V1cVFRV66qmndNttt2nChAm1Pu/Kirmr3x8DakIAIeSNGTNGw4YNkyTNnz8/YN/1vgfUvXt3rVmzRtnZ2erZs6caN26swYMHa/To0Xrrrbc0YcIEbdy4UX379lV5ebn+9re/6a233tLHH3+sHj161Po6Z86cUevWrTVs2DClpaWpcePG+vTTT7Vjxw79/ve/lyQ1aNBAubm5Gjt2rH74wx/qscce8y/Dbtu2rZ588slaXWvQoEGKiorSp59+WuUtc6oydepUXbhwQffee68uXbqk1atXa/v27Vq5cmWV729VZ/369UpJSWEJNurG7CI8oGY+n89q2rSp5XK5ApYp34izZ89a//7v/241adLEkhSwJPvixYtWbm6u1alTJ8vpdFpNmza1unfvbs2bN8/yeDz+4yRVuby6TZs2VmZmpr/36dOnW2lpaVZsbKwVExNjpaWlWS+++GKl89asWWN17drVcjqdVrNmzayRI0da3333XcAxmZmZVkxMTLU/15AhQ6wBAwYEjFW3DNuy/rmsOi0tzYqJibFiY2OtAQMGWJ999lm19atahl1eXm4lJSVZv/rVr6o9D6gKAYSQd+nSJatFixbWuHHjTLcS8jZv3mxFRERY+/fv949dCaATJ05YJ0+evK66Pp/POnHihLV48eJKAZSfn29FR0dbx44du+H+cWvhVjwIeQUFBTpx4oTGjBljupWQ9/3vf18P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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Using the model parameters we saved we load them into a model to recreate the trained model\n",
    "model_r.load_state_dict(checkpoint_rotated['model_state_dict'])\n",
    "# Setting the model to evaluation mode\n",
    "model.eval()\n",
    "# Using the helper function plot the first five misclassified samples\n",
    "plot_mis_classified(model_r,validation_dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f9dcbdc0",
   "metadata": {
    "papermill": {
     "duration": 0.020844,
     "end_time": "2024-06-28T15:43:30.889013",
     "exception": false,
     "start_time": "2024-06-28T15:43:30.868169",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [],
   "dockerImageVersionId": 30733,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 353.455982,
   "end_time": "2024-06-28T15:43:32.130939",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-28T15:37:38.674957",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
